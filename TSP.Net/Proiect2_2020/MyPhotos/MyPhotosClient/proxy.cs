//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyPhotos.Context
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Photo", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos.Context")]
    public partial class Photo : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DateField;
        
        private MyPhotos.Context.Location[] LocationsField;
        
        private string NameField;
        
        private string PathField;
        
        private MyPhotos.Context.Person[] PeopleField;
        
        private int PhotoIdField;
        
        private MyPhotos.Context.Tags[] TagsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date
        {
            get
            {
                return this.DateField;
            }
            set
            {
                this.DateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotos.Context.Location[] Locations
        {
            get
            {
                return this.LocationsField;
            }
            set
            {
                this.LocationsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path
        {
            get
            {
                return this.PathField;
            }
            set
            {
                this.PathField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotos.Context.Person[] People
        {
            get
            {
                return this.PeopleField;
            }
            set
            {
                this.PeopleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhotoId
        {
            get
            {
                return this.PhotoIdField;
            }
            set
            {
                this.PhotoIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotos.Context.Tags[] Tags
        {
            get
            {
                return this.TagsField;
            }
            set
            {
                this.TagsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos.Context")]
    public partial class Location : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int LocationIdField;
        
        private string NameField;
        
        private MyPhotos.Context.Photo[] PhotosField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationId
        {
            get
            {
                return this.LocationIdField;
            }
            set
            {
                this.LocationIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotos.Context.Photo[] Photos
        {
            get
            {
                return this.PhotosField;
            }
            set
            {
                this.PhotosField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos.Context")]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string FirstNameField;
        
        private string LastNameField;
        
        private int PersonIdField;
        
        private MyPhotos.Context.Photo[] PhotosField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return this.FirstNameField;
            }
            set
            {
                this.FirstNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return this.LastNameField;
            }
            set
            {
                this.LastNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonId
        {
            get
            {
                return this.PersonIdField;
            }
            set
            {
                this.PersonIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotos.Context.Photo[] Photos
        {
            get
            {
                return this.PhotosField;
            }
            set
            {
                this.PhotosField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tags", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos.Context")]
    public partial class Tags : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DescriptionField;
        
        private MyPhotos.Context.Photo[] PhotosField;
        
        private int TagIdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotos.Context.Photo[] Photos
        {
            get
            {
                return this.PhotosField;
            }
            set
            {
                this.PhotosField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TagId
        {
            get
            {
                return this.TagIdField;
            }
            set
            {
                this.TagIdField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IPhotoService")]
public interface IPhotoService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/AddPhoto", ReplyAction="http://tempuri.org/IPhotoService/AddPhotoResponse")]
    void AddPhoto(string photoName, string photoPath, string photoLocations, string photoTags, string photoDate);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/AddPhoto", ReplyAction="http://tempuri.org/IPhotoService/AddPhotoResponse")]
    System.Threading.Tasks.Task AddPhotoAsync(string photoName, string photoPath, string photoLocations, string photoTags, string photoDate);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/UpdatePhoto", ReplyAction="http://tempuri.org/IPhotoService/UpdatePhotoResponse")]
    void UpdatePhoto(string name, string newName, string newPath, string newLocation, string newTags, string newDate);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/UpdatePhoto", ReplyAction="http://tempuri.org/IPhotoService/UpdatePhotoResponse")]
    System.Threading.Tasks.Task UpdatePhotoAsync(string name, string newName, string newPath, string newLocation, string newTags, string newDate);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/DeletePhotos", ReplyAction="http://tempuri.org/IPhotoService/DeletePhotosResponse")]
    void DeletePhotos(string photoName, string photoLocation, string photoTag);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/DeletePhotos", ReplyAction="http://tempuri.org/IPhotoService/DeletePhotosResponse")]
    System.Threading.Tasks.Task DeletePhotosAsync(string photoName, string photoLocation, string photoTag);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/AddLocations", ReplyAction="http://tempuri.org/IPhotoService/AddLocationsResponse")]
    void AddLocations(string photoName, string locationsList);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/AddLocations", ReplyAction="http://tempuri.org/IPhotoService/AddLocationsResponse")]
    System.Threading.Tasks.Task AddLocationsAsync(string photoName, string locationsList);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/AddTags", ReplyAction="http://tempuri.org/IPhotoService/AddTagsResponse")]
    void AddTags(string photoName, string tagList);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/AddTags", ReplyAction="http://tempuri.org/IPhotoService/AddTagsResponse")]
    System.Threading.Tasks.Task AddTagsAsync(string photoName, string tagList);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/AddPerson", ReplyAction="http://tempuri.org/IPhotoService/AddPersonResponse")]
    void AddPerson(string firstName, string lastName, string photos);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/AddPerson", ReplyAction="http://tempuri.org/IPhotoService/AddPersonResponse")]
    System.Threading.Tasks.Task AddPersonAsync(string firstName, string lastName, string photos);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/FilterPhotos", ReplyAction="http://tempuri.org/IPhotoService/FilterPhotosResponse")]
    MyPhotos.Context.Photo[] FilterPhotos(string photoName, string person, string path, string location, string tag, string date);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/FilterPhotos", ReplyAction="http://tempuri.org/IPhotoService/FilterPhotosResponse")]
    System.Threading.Tasks.Task<MyPhotos.Context.Photo[]> FilterPhotosAsync(string photoName, string person, string path, string location, string tag, string date);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IPhotoServiceChannel : IPhotoService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class PhotoServiceClient : System.ServiceModel.ClientBase<IPhotoService>, IPhotoService
{
    
    public PhotoServiceClient()
    {
    }
    
    public PhotoServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public PhotoServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public PhotoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public PhotoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public void AddPhoto(string photoName, string photoPath, string photoLocations, string photoTags, string photoDate)
    {
        base.Channel.AddPhoto(photoName, photoPath, photoLocations, photoTags, photoDate);
    }
    
    public System.Threading.Tasks.Task AddPhotoAsync(string photoName, string photoPath, string photoLocations, string photoTags, string photoDate)
    {
        return base.Channel.AddPhotoAsync(photoName, photoPath, photoLocations, photoTags, photoDate);
    }
    
    public void UpdatePhoto(string name, string newName, string newPath, string newLocation, string newTags, string newDate)
    {
        base.Channel.UpdatePhoto(name, newName, newPath, newLocation, newTags, newDate);
    }
    
    public System.Threading.Tasks.Task UpdatePhotoAsync(string name, string newName, string newPath, string newLocation, string newTags, string newDate)
    {
        return base.Channel.UpdatePhotoAsync(name, newName, newPath, newLocation, newTags, newDate);
    }
    
    public void DeletePhotos(string photoName, string photoLocation, string photoTag)
    {
        base.Channel.DeletePhotos(photoName, photoLocation, photoTag);
    }
    
    public System.Threading.Tasks.Task DeletePhotosAsync(string photoName, string photoLocation, string photoTag)
    {
        return base.Channel.DeletePhotosAsync(photoName, photoLocation, photoTag);
    }
    
    public void AddLocations(string photoName, string locationsList)
    {
        base.Channel.AddLocations(photoName, locationsList);
    }
    
    public System.Threading.Tasks.Task AddLocationsAsync(string photoName, string locationsList)
    {
        return base.Channel.AddLocationsAsync(photoName, locationsList);
    }
    
    public void AddTags(string photoName, string tagList)
    {
        base.Channel.AddTags(photoName, tagList);
    }
    
    public System.Threading.Tasks.Task AddTagsAsync(string photoName, string tagList)
    {
        return base.Channel.AddTagsAsync(photoName, tagList);
    }
    
    public void AddPerson(string firstName, string lastName, string photos)
    {
        base.Channel.AddPerson(firstName, lastName, photos);
    }
    
    public System.Threading.Tasks.Task AddPersonAsync(string firstName, string lastName, string photos)
    {
        return base.Channel.AddPersonAsync(firstName, lastName, photos);
    }
    
    public MyPhotos.Context.Photo[] FilterPhotos(string photoName, string person, string path, string location, string tag, string date)
    {
        return base.Channel.FilterPhotos(photoName, person, path, location, tag, date);
    }
    
    public System.Threading.Tasks.Task<MyPhotos.Context.Photo[]> FilterPhotosAsync(string photoName, string person, string path, string location, string tag, string date)
    {
        return base.Channel.FilterPhotosAsync(photoName, person, path, location, tag, date);
    }
}
